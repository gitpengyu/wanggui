数据通信基础
一、通信指标

	通信实质：信息的有效传递。 无失真，高效率。

	数据：运输的信息实体

	信号：数据的电气或电磁的表现，有数字信号：有限的几个离散数值，模拟信号：连续变化的 

	信道：传输数据的通道。 从通信双方信息交互的方式来看，有三种基本方式：
		单工信道：只有一个方向的通信而没有反方向的交互，仅需要一跳信道 。 		比如 电视、广播。  跟主播电话通信呢？ 是电话实现的，而不是无限广播
		半双工： 通信双方都可以通信，但不能同时发送。 	比如： 集线器hub，对讲机 (当然现在高级的可以同时说话，类似电话，传统的只能单方)
		全双工：通信双方可以同时 发送和接受信息，通常需要两条信道。 	比如 交换机，打电话

	码元： 数字通信中，对数字信号的计量单位采用 码元 这个概念。 一个码元(bit) 指 一个固定时长的 数字信号波形 ，该时长称为 码元宽度。

	传输速率
		码元传输速率： 码元，信息载体，承载信息的 。 单位是 波特 Baud，表示 单位时间内 数字通信系统 所传输的码元个数(符号个数或脉冲个数)
		数据传输速率： 单位时间内 数据通信系统 传输的二进制码元个数，单位是 bit/s(bps)。 我们经常所说的 带宽100M,指的是100Mbps = 100M bit/s =  12.5MB/s(下载带宽速度)

	网络传输指标
		传输指标：对网络的效率和性能进行衡量 

		带宽： 100M
		时延： 
			发送时延：上车时间  = 报文长度 / 信道带宽
			传播时延：路上跑的时间 = 传输的信道长度 / 信道传输速率 。  光  30万公里/s 
			处理时延：数据在交换节点进行 存储转化 而进行一些必要所需时间，有时可以忽略。
			RTT：(round trip time) 往返延时，表示从发送方发送数据，到发送方收到 来自接收方的确认，总共经历的时延。 ping 30ms , 就是RTT时间
			时延带宽积：传播时延 乘以 带宽， 相当于 第一个bit到达接收方之前，发送方 最多发送的bit数。 
			误码率： 传输中发生错误的位数/总位数， 一般网络要求误码率低于 10的-6次方，即1M 数据必须小于 1个。  

	传输损害
		衰减: 信号强度 随着 距离延伸 而减弱。 比如网线 100米， 光纤 多模500米, 单模几十km了，这里说的是两设备之间没有任何设备，比如 北京到美国 那么远怎么办？ 中间加设备
		延迟变形:  是 有线传输介质 独有的现象，指的是 有线介质上 信号传播速率 随频率的变化 而引起的。  比如 99 - 100主频率 - 101 , 速度就不一样，语音影响较大
		噪声：
			热噪声： 是导体中电子的热振动引起的，出现在所有电子设备和传输介质中。 只要有温度，就有热噪声。  绝对0度，理想状态，电子全部处于静止状态。 
			内调制杂音：不同频率的信号共享  同一个传输介质中  所产生。 比如 频分复用， 10M,20M ;  ADSL，打电话+上网 , 干扰一定有，通过技术手段降低
			串扰： 信号通信之前产生了不必要的耦合，这一般在 邻近的双绞线 因电耦合而产生的。 光信号不会产生。  双绞线 铜丝 缠绕到一起，就是为了降低串扰。
			脉冲噪声： 非连续的电磁干扰，比如 闪电 。

			耦合： 当一个子系统 发生变化时对 另一个子系统的影响。
				如果影响很小，则称它们是松散耦合的；反之，如果变化的影响很大时，则称它们是紧密耦合的。若两模块间彼此无任何交互，则称之为非直接耦合。
				当两个或两个以上的电路构成一个网络时，若其中某一电路中电流或电压发生变化，能影响到其他电路也发生类似的变化，这种网络叫做耦合电路。
				耦合效率：在光纤传输中，接口的入端光功率与出端光功率之比。由光源发出的功率与光纤束接受到的功率之比。 效率越高越好。
			
二、 数据编码
	1. 数字通信系统模型 如下所示, 完成信号的 产生、变换、传递及接受
		信息源： 原始信息 

		信源编码： 将模拟信号 转化为 数字信号。 将 人的说话声音，文字，图形等模拟信号 转化为 数字信号。

		信道编码： 将数字信号 转化为 与调制方式和传输信道匹配的形式，从而降低信息传输的误码率，提升传输可靠性。 比如 4B/5B  提供冗余性

		调制： 将数字信号 转化为 模拟信号 再进行传播。
			根据 信道传输介质 ，对编码后的数字信号 进行 调制后 再传入信道中。 比如 光纤信道中的光调制，无线信道中的 调频，调相，调幅等。

		继续 信道- 解制 - 信道解码 - 信源解码 - 信息宿 。 

	2. 不归零编码  NRZ : no-return-zero , 脉冲从来不到0的编码 , 也叫 "差分码"
		规律：当出现"1"时 电平翻转， "0"时 电平不翻转。 比如 10010101 ，第2,3位 都是0，电平不翻转
		主要用在终端到调制解调器当中。  

		MTL-3编码, 跟NRZ类似，遇1跳变，遇0保持不变。 
			1. 如果下一个输入值为 0，则电平保持不变
			2. 如果下一个输入值为 1，则产生跳变， 但又分为两种情况： 
				如果 前一个电平是 +1或-1，下一个电平为0 ；
				如果 前一个电平是 0 ，则下一个电平和最近一个非0(的电平值输入值)相反。  即电平和前一个肯定 一上一下，一正一负

		总结： 
			只要波形变了，下一个输入值 肯定为1 ； 
			波形没变，则说明 输入值肯定是 0 ； 逆推过来，只要当前输入值为0，则上一个 波形 肯定没变； 

	3. 曼彻斯特编码
		1. 双相码： 1个bit 由两个电平来表示。 常用于 以太网 中 。
		2. 每个bit 中间均有一个跳变，高到低代表"0", 低到高代表"1" , 即 当前编码 Z字形状 = 0 。 
		3. 第一个编码自定义 


		差分曼彻斯特码
			1. 双相码。 用于 令牌环网 中。 
			2. 有跳变 代表 "0" ，无跳变 代表 "1" , 有0无1 。 这里的跳变，跟上面的不一样，上面的跳变是 当前输入值的波形。
				这里比较的是始末电平，上一个输入值的起始电平 与 上一个输入值的终止电平 一样 表示 "1", 不一样即有变化表示 "0"。 

	4. 编码效率和特点
		两种曼彻斯特编码，编码效率都是 50% 。 因为每个码元 都需要调制为 两个不同的电平(一高一低或一低一高)，因为 调制速率 = 码元速率 X 2 。
		因此对信道的带宽提出了更高的要求，比如当传输速率 100Mbps，需要 200Mhz的脉冲

		4B/5B 80%效率 多一位用于解决 同步问题 。 百兆以太网(100BASE-X,先 4B/5B 再 NRZ-i编码 ; 100base-tx, 先4B/5B编码，然后再 MTL-3编码 ; )
		8B/10B 千兆以太网，  66/68B 万兆以太网。 


三、信道延迟
	总延迟  = 发送延迟 + 线路延迟 + 处理延迟(忽略)

	光速 3.0*10的8次方 m/s = 300 m/us ; 电缆中的传播速度一般为光速的 77%, 即 200m/us 。

	1秒 = 1000 hs = 1000000 us ; 1Byte = 8 bit ; 100Mbps = 100 * 10的6次方 bit/s 

	1000米电缆， 线路延迟 = 1000m / 200m/us = 5us。  
		100M线路带宽，发送1000 Byte数据， 其发送时延 = 1000B/100Mbps =  1000B*8bit / 100*10的6次方 =  80 us ; 
			一个帧 = 1518字节 ，其发送时延 = 1518*8/100Mbps = 121.44us , 即 100Mbps带宽下 发送一帧所需要的发送时延为 120us ;
			64字节确认包 = 64 * 8 / 100Mbps = 5us 

		卫星信道的时延 大约为 270ms (RTT来回的)

	以太网帧： 
		首部 14个字节 +  MTU(46-1500字节) + 尾部 4个字节, 即以太网帧大小 最小 64B, 最大 1518B
		而MTU 1500 = ip首部 20个字节 + tcp首部 20个字节 + 应用数据(1460)

	停等机制： A发送数据给B后，需要收到B的确认，才会发送下一个包。 确认包一般是小包 , 64B 。 
	确认包说明是 来回两个过程。  所以其有效传输速率： 传输的数据大小 / 总时延(发送时延  + 应答时延 + 传播时延 X 2)

	帧间隙: 每一个数据帧发送的 间隔时间; 

	10M带宽下： 150000字节 =  100帧
		发送时延： 100帧 * 1214.4us ~= 121.4ms 
		应答时延： 100帧 * 51.2us ~= 5.12s
		传播时延： 100帧 * 2000m  / 200m/us * 2 = 2000us = 2ms
	所以 总花费时间 = 128.6ms , 有效传输速率(1500还是1518？看情况)   = 有效数据大小 / 花费时间，即 150000*8 / 128.6 = 9375 bit/ms = 9.3 MB/s 

	关于计算机中K到底是1000还是1024？
		在传输领域,1kb=1000b, 这里的b是小写, 即1kb/s表示1秒钟传输1000个比特位; 就好像走路,速度是1km/小时,即1000米/小时,和1024没半点关系;
		在存储领域,1kB=1024B, 这里的B是大写, 表示字节,即8个字位(bit);

	



















